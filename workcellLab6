int Brain_precision = 0, Console_precision = 0;


float myVariable, Index, z;


float VEX[18][3];
float VEX2[17][3];


event message1 = event();


// "when started" hat block
int whenStarted1() {
 z = 2.0;
 RoboticArm1.setMasteringValues(1786.0,1926.0,1785.0,508.0);
 RoboticArm1.setToolTipOffset(1.05, 0.0, -1.0);
 VEX2[0][0] = 5.34;
 VEX2[0][1] = -3.07;
 VEX2[0][2] = z;
 VEX2[1][0] = 8.34;
 VEX2[1][1] = -1.76;
 VEX2[1][2] = z + -0.2;
 VEX2[2][0] = 5.34;
 VEX2[2][1] = -1.24;
 VEX2[2][2] = z;
 VEX2[3][0] = 5.34;
 VEX2[3][1] = -1.24;
 VEX2[3][2] = 3.5;
 VEX2[4][0] = 5.71;
 VEX2[4][1] = 1.0;
 VEX2[4][2] = z;
 VEX2[5][0] = 5.54;
 VEX2[5][1] = -0.5;
 VEX2[5][2] = z;
 VEX2[6][0] = 8.5;
 VEX2[6][1] = -0.5;
 VEX2[6][2] = z;
 VEX2[7][0] = 8.5;
 VEX2[7][1] = 1.0;
 VEX2[7][2] = z + -0.5;
 VEX2[8][0] = 8.5;
 VEX2[8][1] = 1.0;
 VEX2[8][2] = 3.5;
 VEX2[9][0] = 6.5;
 VEX2[9][1] = 1.0;
 VEX2[9][2] = z;
 VEX2[10][0] = 6.5;
 VEX2[10][1] = -0.5;
 VEX2[10][2] = z;
 VEX2[11][0] = 6.5;
 VEX2[11][1] = -0.5;
 VEX2[11][2] = 3.5;
 VEX2[12][0] = 5.38;
 VEX2[12][1] = 2.0;
 VEX2[12][2] = z;
 VEX2[13][0] = 8.5;
 VEX2[13][1] = 3.0;
 VEX2[13][2] = z + -0.1;
 VEX2[14][0] = 8.5;
 VEX2[14][1] = 3.0;
 VEX2[14][2] = 3.5;
 VEX2[15][0] = 5.38;
 VEX2[15][1] = 3.0;
 VEX2[15][2] = z;
 VEX2[16][0] = 8.5;
 VEX2[16][1] = 1.0;
 VEX2[16][2] = z + -0.2;Index = 1.0;
 repeat(17) {
   RoboticArm1.moveToPositionLinear(VEX2[static_cast<int>(Index) - 1][static_cast<int>(1) - 1], VEX2[static_cast<int>(Index) - 1][static_cast<int>(2) - 1], VEX2[static_cast<int>(Index) - 1][static_cast<int>(3) - 1]);
   Index = Index + 1.0;
   wait(5, msec);
 }
 return 0;
}


// "when EStop pressed" hat block
void onevent_EStop_pressed_0() {
 RoboticArm1.emergencyStop();
}


// "when started" hat block
int whenStarted2() {
 Brain.Screen.setFont(mono60);
 Brain_precision = 3;
 while (true) {
   Brain.Screen.clearScreen();
   // Display the X position on row 1
   Brain.Screen.setCursor(1, 1);
   Brain.Screen.print("X: ");
   Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(xaxis)));
   Brain.Screen.newLine();
   // Display the Y position on row 2
   Brain.Screen.print("Y: ");
   Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(yaxis)));
   Brain.Screen.newLine();
   // Display the Z position on row 3
   Brain.Screen.print("Z: ");
   Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(zaxis)));
   wait(0.2, seconds);
 wait(5, msec);
 }
 return 0;
}




int main() {
 // register event handlers
 EStop.pressed(onevent_EStop_pressed_0);


 wait(15, msec);
 // post event registration


 // set default print color to black
 printf("\033[30m");


 // wait for rotation sensor to fully initialize
 wait(30, msec);


 vex::task ws1(whenStarted2);
 whenStarted1();
}
