# just testing some hangman stuff :]
import random

#wordbank!
wordBank = ["chemistry", "molecules", "electrons" "significantFigures", "acid", "base", "absorbtion", "wavelength", "analyte", "anion", "thermodynaics", "electrochemistry", "equillibrium", "Arrhenius", "atmosphere", "atom", "mass", "volume", "anode", "cathode", "constant", "salt", "bond", "Boyle", "calorimeter", "catalyst", "calorimetry", "equation", "reaction", "conjugate", "crystalline", "degrees", "density", "dilution", "dissociation", "entropy", "enzyme", "enthalpy", "frequency", "temperature", "gas", "solution", "iceChart", "ion", "joule", "kelvin", "kinetics", "Lewis", "meniscus", "metal", "molarity", "molality", "mole", "net", "oxidation", "pressure", "plasma", "ph", "unsaturated", "titration", "titrant", "vapor," "system", "cell", "torr", "sublimation", "spontaneous", "solute", "solvent", "rad", "reactants", "products"]

def obtainWord():
  word = random.choice(wordBank)
  return word.upper()


def play(word):
  completion = "_" * len(word)
  guessed = False
  guessedLetters = []
  guessedWords = []
  tries = 6
  print("Welcome. Let's play.")
  print(hangman(tries))
  print(completion)
  print("\n")
  while not guessed and tries > 0:
    guess = input("Please guess a letter or word: ").upper()
    if len(guess) == 1 and guess.isalpha():
      if guess in guessedLetters:
        print("You've already guessed this letter.", guess)
      elif guess not in word:
        print(guess, "is absent.")
        tries -= 1
        guessedLetters.append(guess)
      else:
        print("Good for you, ", guess, " is present.")
        guessedLetters.append(guess)
        wordList = list(completion)
        indicies = [i for i, letter in enumerate(word) if letter == guess]
        for index in indicies:
          wordList[index] = guess
        completion = "".join(wordList)    
        if "_" not in completion:
          guessed = True
    elif len(guess) == len(word) and guess.isalpha():
        if guess in guessedWords:
          print("You've already guessed this word.", guess)
        elif guess != word: 
          print(guess, "is not correct.")
          tries -= 1
          guessedWords.append(guess)
        else:
          guessed = True
          completion = word
    else:
      print("Invalid.")
    print(hangman(tries))
    print(completion)
    print("\n")
  if guessed:
    print("Impressive, you figured it out! Congratulations.")
  else:
    print("Unfortunately, you've run out of tries. The word was " + word + ". Hopefully you figure it out next time...")



def hangman(tries):
    stages = [  # final state
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                """,
                # one try left
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                """,
                # two tries left
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                """,
                # 3 tries left
                """
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                """,
                # 4 tries left
                """
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                """,
                # 5 tries left
                """
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                """,
                # initial state
                """
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                """
    ]
    return stages[tries]


def main():
  word = obtainWord()
  play(word)
  while input("Again? (Y/N) ").upper() == "Y":
    word = obtainWord()
    play(word)


if __name__ == "__main__":
  main()
